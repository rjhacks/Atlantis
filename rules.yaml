functions:
- allowCreate(): next.exists() && !prev.exists()
- allowUpdate(): next.exists()
- allowIncrement(): next.exists() && next.val() == prev.val() + 1
- ifGameExists(): root.games.$game_id.exists()
- ifTurnExists(): root.boards.$game_id.turn_history.$turn_number.exists()
- ifIsCurrentTurn(): root.games.$game_id.turn.turn_number.val() + '' == $turn_number
- ifIsNextTurn(): (root.games.$game_id.turn.turn_number.val() + 1) + '' == $turn_number
- ifIsNextBoard(): (root.games.$game_id.turn.board_number.val() + 1) + '' == $board_number
- ifIsFirstBoard(): $board_number == "0"

schema:
  definitions:
    board:
      type: object
      properties:
        segments:
          # TODO(rjh): specify what a segment is in more detail.
          type: object
        towers:
          # TODO(rjh): specify what a tower is in more detail.
          type: object
        dead_points:
          # TODO(rjh): specify what a dead point is in more detail.
          type: object
      required: [segments]
      additionalProperties: false
    player:
      type: object
      properties:
        name:
          type: string
      required: [name]
      additionalProperties: false

  type: object
  properties:
    games:
      type: object
      $game_id:
        type: object
        properties:
          turn:
            type: object
            properties:
              turn_number:
                type: number
              board_number:
                type: number
          boards_within_turn:
            type: number
          rules_version:
            type: string
          players:
            type: object
            ~$player_id: {$ref: "#/definitions/player"}
        required: [turn]
        additionalProperties: false
    boards:  # Stored outside 'games' so we can get all game info without getting all the boards.
      type: object
      $game_id:
        type: object
        properties:
          turn_history:
            type: object
            $turn_number:
              type: object
              properties:
                board_history:
                  type: object
                  $board_number: {$ref: "#/definitions/board"}
        additionalProperties: false
  additionalProperties: false

access:
- location: "/"
  read: false
  write: false

- location: "/games/$game_id/"
  read: ifGameExists()  # Players can only access games whose game ID they know.
  write: allowCreate()  # Only create is allowed, so a game, once created, stays created.

#- location: "/games/$game_id/moves"
  # We can only increment "moves" if the matching board is already added to the history.
#  write: allowIncrement() && ifBoardExists() # Value must always increase by exactly 1.
- location: "/games/$game_id/turn"
  write: ifGameExists()

- location: "/boards/$game_id/"
  read: ifGameExists()

- location: "/boards/$game_id/turn_history/$turn_number/board_history/$board_number"
  write: ifGameExists() && ((ifIsNextTurn() && ifIsFirstBoard()) || (ifIsCurrentTurn() && ifIsNextBoard()))
